name: Publish Docker image

on:
  push:
    branches: [dev]
    tags:
      - "*"
    paths:
      - "docker/**"
      - "env/**"
      - "app/**"
      - "run/**"
      - ".github/**"

jobs:
  build_test_push:
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          large-packages: false
          docker-images: false
          swap-storage: true
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=registry.gitlab.com/ncsa-blast/kubernetes/blast
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:dev"
          else
            TAGS="${DOCKER_IMAGE}:dev"
          fi
          echo ::set-output name=tags::${TAGS}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v4
        with:
          registry: "registry.gitlab.com"
          username: "${{ secrets.GITLAB_REGISTRY_USERNAME }}"
          password: "${{ secrets.GITLAB_REGISTRY_TOKEN }}"

      - name: Build and export to Docker
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          load: true
          push: false
          builder: ${{ steps.buildx.outputs.name }}
          context: ./app
          file: ./app/Dockerfile
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Run tests
        run: bash run/blast.up.sh ci

      # - uses: codecov/codecov-action@v4
      #   with:
      #     directory: app/

      - name: Push image
        id: docker_push
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64
          tags: ${{ steps.prep.outputs.tags }}
