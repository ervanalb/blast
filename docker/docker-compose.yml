volumes:
  blast-db: {}
  blast-data: {}
  django-static: {}

services:
  app:
    extends:
      file: docker-compose.blast_base.yml
      service: ${BLAST_IMAGE}
    ports:
      - 127.0.0.1:8000:${WEB_APP_PORT}
    profiles: ["full_prod", "slim_prod"]
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
    networks:
      default:
        aliases:
          - ${WEB_APP_HOST}
  celery:
    extends:
      file: docker-compose.blast_base.yml
      service: ${BLAST_IMAGE}
    command: bash entrypoints/docker-entrypoint.celery.sh
    profiles: ["full_prod", "full_dev", "batch"]
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
    deploy:
      resources:
        reservations:
          cpus: '0.25'
          memory: 1G
        limits:
          cpus: "${CELERY_WORKER_LIMIT_CPUS:-4.0}"
          memory: ${CELERY_WORKER_LIMIT_MEMORY:-4G}
  celery_beat:
    extends:
      file: docker-compose.blast_base.yml
      service: ${BLAST_IMAGE}
    command: bash entrypoints/docker-entrypoint.celery_beat.sh
    profiles: ["full_prod", "full_dev", "batch"]
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
  rabbitmq:
    restart: always
    image: rabbitmq:3.10.6-management-alpine
    ports:
      - 127.0.0.1:5672:${MESSAGE_BROKER_PORT}
      - 127.0.0.1:15672:${MESSAGE_BROKER_MANAGEMENT_PORT}
    volumes:
      - ../data/rabbitmq_data:/data
      - ../data/rabbitmq_data/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
    profiles: ["full_prod", "full_dev", "batch"]
  database:
    extends:
      file: docker-compose.blast_base.yml
      service: database_base
    profiles: ["full_prod", "slim_prod", "full_dev", "slim_dev", "batch"]
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
  nginx:
    extends:
      file: docker-compose.blast_base.yml
      service: nginx_base
    volumes:
      - ../nginx/default.conf:/etc/nginx/conf.d/default.conf
    profiles: ["full_prod"]
  nginx_slim:
    extends:
      file: docker-compose.blast_base.yml
      service: nginx_base
    volumes:
      - ../nginx/default_slim.conf:/etc/nginx/conf.d/default.conf
    networks:
      default:
        aliases:
          - nginx
    profiles: ["slim_prod"]
  flower:
    extends:
      file: docker-compose.blast_base.yml
      service: ${BLAST_IMAGE}
    command: bash entrypoints/docker-entrypoint.flower.sh
    ports:
      - 127.0.0.1:8888:${FLOWER_PORT}
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
    profiles: ["full_prod", "full_dev", "batch"]
  app_test:
    extends:
      file: docker-compose.blast_base.yml
      service: ${BLAST_IMAGE}
    ports:
      - 127.0.0.1:8000:${WEB_APP_PORT}
    networks:
      default:
        aliases:
          - ${WEB_APP_HOST}
    environment:
      - "TEST_MODE=1"
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
    profiles: ["test"]
  database_test:
    extends:
      file: docker-compose.blast_base.yml
      service: database_base
    networks:
      default:
        aliases:
          - ${DATABASE_HOST}
    environment:
      - "MYSQL_ROOT_PASSWORD=password"
      - "MYSQL_DATABASE=blast_db"
    profiles: ["test"]
  app_ci:
    extends:
      file: docker-compose.blast_base.yml
      service: ${BLAST_IMAGE}
    command: bash entrypoints/docker-entrypoint.app.sh
    networks:
      default:
        aliases:
          - ${WEB_APP_HOST}
    environment:
      - "TEST_MODE=1"
    env_file:
      - ../env/.env.default
      - ../env/.env.ci
    profiles: ["ci"]
  database_ci:
    extends:
      file: docker-compose.blast_base.yml
      service: database_ci
    networks:
      default:
        aliases:
          - ${DATABASE_HOST}
    env_file:
      - ../env/.env.default
      - ../env/.env.ci
    profiles: ["ci"]
  app_dev:
    extends:
      file: docker-compose.blast_base.yml
      service: ${BLAST_IMAGE}
    command: bash entrypoints/docker-entrypoint.app.sh
    ports:
      - 127.0.0.1:8000:${WEB_APP_PORT}
    profiles: ["full_dev", "slim_dev", "batch"]
    environment:
      - "DEV_MODE=1"
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
    networks:
      default:
        aliases:
          - ${WEB_APP_HOST}
  batch:
    image: python:3.9-buster
    volumes:
      - ../batch/run_batch.py:/run_batch.py
      - ../app/entrypoints/wait-for-it.sh:/wait-for-it.sh
      - ../batch/docker-entrypoint.batch.sh:/docker-entrypoint.batch.sh
      - ${BATCH_CSV}:/input.csv
      - ${OUTPUT_CSV}:/results.csv
    profiles: ["batch"]
    command: bash docker-entrypoint.batch.sh
    network_mode: "host"
    env_file:
      - ../env/.env.default
      - ../env/.env.dev
